# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-06 15:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('bullets', '0002_auto_20171228_1124'),
    ]

    operations = [
        migrations.CreateModel(
            name='BulletRunnerPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='Photo URL')),
                ('runner_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Runner Number')),
            ],
        ),
        migrations.CreateModel(
            name='BulletsRunFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='(you can leave this blank)', max_length=200, verbose_name='name')),
                ('email', models.EmailField(blank=True, help_text='(you can leave this blank)', max_length=200, verbose_name='email address')),
                ('question_one', models.TextField(blank=True, help_text='Tell us three things that you thought went particularly well from your experience at the Bullets Run', verbose_name='Three things that went well?')),
                ('question_two', models.TextField(blank=True, help_text='Tell us a few things that we could have improved to make your Bullets Run experience even better', verbose_name='Three things we could improve?')),
                ('run_again', models.BooleanField(verbose_name='Should the Bullets have another charity run in 2018?')),
                ('question_three', models.TextField(blank=True, verbose_name='Final thoughts?')),
            ],
        ),
        migrations.CreateModel(
            name='CharityOfYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('link', models.URLField(verbose_name='link to charity')),
                ('count', models.PositiveSmallIntegerField(default=0, verbose_name='vote count')),
            ],
        ),
        migrations.CreateModel(
            name='InterclubRider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('email', models.EmailField(max_length=200, verbose_name='email address')),
                ('club', models.CharField(choices=[('birc', 'Birchfield'), ('brum', 'Birmingham Easy Riders'), ('bull', 'Boldmere Bullets'), ('brez', 'Breeze Riders'), ('bob', 'Brothers on Bikes'), ('cano', 'Cannon Hill CC'), ('ctc', 'CTC'), ('dyna', 'Dynamic Rides'), ('giro', 'GIRO'), ('gori', 'Gorilla Coffee Cycling'), ('grbr', 'Great Barr and Erdingtion Cycling Club'), ('mose', 'Moseley Missiles'), ('path', 'Pathfinders'), ('tamw', 'Tamworth Cycling Club'), ('tmcc', 'Tamworth RMCC'), ('tita', 'Tamworth Titans')], default='birc', help_text='Which club do you normally ride with?', max_length=4, verbose_name='club')),
                ('ice', models.CharField(blank=True, max_length=200, verbose_name='emergency contact number')),
                ('speed', models.CharField(choices=[('les', 'Lesiure (10/11/12mph - 19 miles)'), ('soc', 'Social (13/14mph - 30 miles)'), ('med', 'Medium (15/16/17mph - 39 miles)'), ('fas', 'Long (18/19/20+mph - 45 miles)')], default='les', max_length=3)),
                ('signed_up', models.DateField(auto_now_add=True, verbose_name='date signed up')),
            ],
        ),
        migrations.CreateModel(
            name='NewTDBLeaderBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment_id', models.PositiveIntegerField(verbose_name='Segment ID')),
                ('athlete_id', models.PositiveIntegerField(verbose_name='Athlete ID')),
                ('activity_id', models.PositiveIntegerField(verbose_name='Activity ID')),
                ('athlete_name', models.CharField(max_length=300, verbose_name='Athlete Name')),
                ('time_taken', models.DurationField(verbose_name='Time Taken')),
                ('date_completed', models.DateField(verbose_name='Date completed')),
                ('stage_type', models.CharField(choices=[('h', 'hilly'), ('f', 'flat'), ('?', 'other'), ('p', 'prologue')], default='p', max_length=1, verbose_name='Stage Type')),
            ],
            options={
                'verbose_name': 'NEW TdB Leaderboard Entry',
                'verbose_name_plural': 'NEW TdB Leaderboard Entries',
            },
        ),
        migrations.CreateModel(
            name='RunningEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Run Date')),
                ('session_type', models.CharField(blank=True, max_length=200, verbose_name='Session type')),
                ('session_details', models.CharField(max_length=200, verbose_name='Session details')),
                ('meeting_point', models.CharField(choices=[('h', 'Harvester'), ('b', 'Boldmere Gate'), ('r', 'Blackroot Bistro')], default='h', max_length=1, verbose_name='Meeting point')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='VeloFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='(you can leave this blank)', max_length=200, verbose_name='name')),
                ('email', models.EmailField(blank=True, help_text='(you can leave this blank)', max_length=200, verbose_name='email address')),
                ('volunteer_type', models.CharField(choices=[('dm', 'Domestique (on the bike)'), ('sd', 'Sweep driver'), ('sn', 'Sweep navigator'), ('fs', 'Feed station helper')], default='dm', max_length=2, verbose_name='What was your volunteering role?')),
                ('question_one', models.TextField(blank=True, help_text='Tell us three things that you thought went particularly well from your experience volunteering at the Velo', verbose_name='Three things that went well?')),
                ('question_two', models.TextField(blank=True, help_text='Tell us a few things that we could have improved to make your volunteering experience even better', verbose_name='Three things we could improve?')),
                ('support_again', models.BooleanField(help_text='If the opportunity arises, do you think that the Boldmere Bullets should volunteer to support the Velo in 2018?', verbose_name='Should the Bullets support the Velo in 2018?')),
                ('volunteer_again', models.BooleanField(help_text='If we are involved in the Velo 2018, would you be willing to assist again in some role?', verbose_name='Would you volunteer to help again?')),
                ('question_three', models.TextField(blank=True, verbose_name='What information or advice would have been useful?')),
                ('question_four', models.TextField(blank=True, verbose_name='Final thoughts?')),
            ],
        ),
        migrations.CreateModel(
            name='VeloVolunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=200, verbose_name='email address')),
                ('name', models.CharField(blank=True, help_text='Your name', max_length=200, verbose_name='name')),
                ('address', models.TextField(help_text='Your address', verbose_name='address')),
                ('volunteer_type', models.CharField(choices=[('r', 'rider'), ('n', 'non-rider')], default='r', max_length=1)),
                ('entered_velo', models.BooleanField(verbose_name='have you entered the Velo?')),
                ('average_speed', models.CharField(blank=True, max_length=10, verbose_name='expected average speed for 100mile ride (mph)')),
                ('kit_sex', models.CharField(choices=[('m', 'male-fit'), ('f', 'female-fit')], default='m', max_length=1, verbose_name='do you want male or female-fit kit?')),
                ('jersey_size', models.CharField(choices=[('xs', 'X Small'), ('s', 'Small'), ('m', 'Medium'), ('l', 'Large'), ('xl', 'X Large'), ('xxl', 'XX Large'), ('xxxl', 'XXX Large')], max_length=4, verbose_name='jersey size')),
                ('short_size', models.CharField(choices=[('xs', 'X Small'), ('s', 'Small'), ('m', 'Medium'), ('l', 'Large'), ('xl', 'X Large'), ('xxl', 'XX Large'), ('xxxl', 'XXX Large')], max_length=4, verbose_name='bib short size')),
                ('tshirt_size', models.CharField(choices=[('xs', 'X Small'), ('s', 'Small'), ('m', 'Medium'), ('l', 'Large'), ('xl', 'X Large'), ('xxl', 'XX Large'), ('xxxl', 'XXX Large')], max_length=4, verbose_name='t-shirt size')),
                ('drive_van', models.BooleanField(verbose_name='are you willing to drive a van?')),
                ('drive_bus', models.BooleanField(verbose_name='are you willing to drive a minibus?')),
                ('contact_no', models.CharField(max_length=100, verbose_name='contact number')),
                ('unique_ref', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='random uuid for emails')),
                ('feedback_received', models.BooleanField(default=False, verbose_name='recieved feedback')),
            ],
        ),
        migrations.AddField(
            model_name='bullet',
            name='voting_ref',
            field=models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, verbose_name='random uuid for voting'),
        ),
        migrations.AddField(
            model_name='bulletsrunner',
            name='chip_time',
            field=models.CharField(blank=True, max_length=200, verbose_name='Chip Time'),
        ),
        migrations.AddField(
            model_name='bulletsrunner',
            name='gun_time',
            field=models.CharField(blank=True, max_length=200, verbose_name='Gun Time'),
        ),
        migrations.AddField(
            model_name='bulletsrunner',
            name='had_email',
            field=models.BooleanField(default=False, verbose_name='received update email'),
        ),
        migrations.AddField(
            model_name='bulletsrunner',
            name='had_final_email',
            field=models.BooleanField(default=False, verbose_name='received final email'),
        ),
        migrations.AddField(
            model_name='bulletsrunner',
            name='runner_number',
            field=models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Runner Number'),
        ),
        migrations.AddField(
            model_name='velovolunteer',
            name='bullet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bullets.Bullet'),
        ),
    ]
